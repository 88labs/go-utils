version: '3'
services:
  elasticmq:
    image: softwaremill/elasticmq:latest
    container_name: go_utils_elasticmq
    ports:
      - "29324:29324"
      - "29325:29325"
    volumes:
      - ./docker/sqs_elasticmq/opt/elasticmq.conf:/opt/elasticmq.conf:ro
  minio:
    image: minio/minio:latest
    container_name: go_utils_minio_ci
    ports:
      - "29000:29000"
    environment:
      - MINIO_ROOT_USER=DUMMYACCESSKEYEXAMPLE
      - MINIO_ROOT_PASSWORD=DUMMYSECRETKEYEXAMPLE
      - AWS_DEFAULT_REGION=ap-northeast-1
      - AWS_EC2_METADATA_DISABLED=true
    entrypoint: sh
    command: -c "
      minio server --address ':29000' /data;
      "
    volumes:
      - ./docker/minio/data:/data
  miniocreatebuckets:
    image: minio/mc
    container_name: go_utils_minio_init_ci
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add s3 http://minio:29000 DUMMYACCESSKEYEXAMPLE DUMMYSECRETKEYEXAMPLE;
      /usr/bin/mc --quiet mb s3/test;
      /usr/bin/mc --quiet policy set-json /policies/policy_test.json s3/test;
      exit 0;
      "
    volumes:
      - ./docker/minio/policies:/policies
  dynamodb:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data -port 28002"
    image: "amazon/dynamodb-local:latest"
    container_name: go_utils_dynamodb_ci
    ports:
      - "28002:28002"
    volumes:
      - "./docker/dynamodb/data:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
  dynamodbcreatetable:
    image: "amazon/aws-cli"
    container_name: go_utils_dynamodb_ci_init
    environment:
      - AWS_ACCESS_KEY_ID=DUMMYACCESSKEYEXAMPLE
      - AWS_SECRET_ACCESS_KEY=DUMMYSECRETKEYEXAMPLE
      - AWS_DEFAULT_REGION=ap-northeast-1
    depends_on:
      - dynamodb
    entrypoint: >
      /bin/sh -c '
      until (aws dynamodb list-tables --endpoint-url http://dynamodb:28002 --output text) do echo '...waiting...' && sleep 1; done;
      aws dynamodb create-table --cli-input-json file:///test_tables/table_test.json --endpoint-url http://dynamodb:28002;
      until (aws dynamodb describe-table --table-name test --endpoint-url http://dynamodb:28002 --output text) do echo '...waiting...' && sleep 1; done;
      '
    volumes:
      - ./docker/dynamodb:/test_tables
