// Code generated by MockGen. DO NOT EDIT.
// Source: director.go

// Package mock_protocol is a generated GoMock package.
package mock_protocol

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDirector is a mock of Director interface.
type MockDirector struct {
	ctrl     *gomock.Controller
	recorder *MockDirectorMockRecorder
}

// MockDirectorMockRecorder is the mock recorder for MockDirector.
type MockDirectorMockRecorder struct {
	mock *MockDirector
}

// NewMockDirector creates a new mock instance.
func NewMockDirector(ctrl *gomock.Controller) *MockDirector {
	mock := &MockDirector{ctrl: ctrl}
	mock.recorder = &MockDirectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDirector) EXPECT() *MockDirectorMockRecorder {
	return m.recorder
}

// GetUrl mocks base method.
func (m *MockDirector) GetUrl(w http.ResponseWriter, r *http.Request) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrl", w, r)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetUrl indicates an expected call of GetUrl.
func (mr *MockDirectorMockRecorder) GetUrl(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrl", reflect.TypeOf((*MockDirector)(nil).GetUrl), w, r)
}

// GetUrlFromParams mocks base method.
func (m *MockDirector) GetUrlFromParams(r *http.Request) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrlFromParams", r)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetUrlFromParams indicates an expected call of GetUrlFromParams.
func (mr *MockDirectorMockRecorder) GetUrlFromParams(r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrlFromParams", reflect.TypeOf((*MockDirector)(nil).GetUrlFromParams), r)
}

// SetUrl mocks base method.
func (m *MockDirector) SetUrl(w http.ResponseWriter, r *http.Request, redirectUrl string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetUrl", w, r, redirectUrl)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetUrl indicates an expected call of SetUrl.
func (mr *MockDirectorMockRecorder) SetUrl(w, r, redirectUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetUrl", reflect.TypeOf((*MockDirector)(nil).SetUrl), w, r, redirectUrl)
}
